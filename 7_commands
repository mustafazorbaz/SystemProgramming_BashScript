#!/bin/bash

echo "Hello  World"
path=$(pwd)
echo $path

variable=100
echo "\$variable= $variable "
echo -n "Print file? [y/n]: "
read
################################  Numeric Variables ################################
echo "################################  Numeric Variables ################################"
num1=15
num2=4
num3=60
sum=0
(( sum=$num3 - $num2 ))
echo $sum

word="Mars, Güneş Sistemi'nin Güneş'ten itibaren dördüncü gezegeni. Roma mitolojisindeki savaş tanrısı Mars'a ithafen adlandırılmıştır."
echo ${word:5}	# 5. karekterden sonra alır.
echo ${word:(-50)} #sondan 50 karekteri atar.
echo ${word:0:4} #İlk  4 karekteri alır.Çıktı :Mars
echo ${word:5:6} #5 karekterden sonrakini alır.Çıktısı:Güneş
echo ${#word}  #Metin uzunluğu 

######################## Array Variable ########################
echo "######################## Array Variable ########################"
# tanımlama için  declare -a kullanılmaktadır.
declare -a sports
sports=(basketboll football tenis)
echo ${sports[*]}
sports[3]=swimming
echo ${sports[@]}
moresports=(${sports[*]} voleyball )
echo ${moresports[*]}

for i in ${moresports[@]}
do
	echo " \$@ Dizi elemanı $i "
done
echo "-----------"
for i in ${moresports[*]}
do
	echo "\$* Dizi elemanı $i "
done
###################### Output and Quoting ########################
echo "###################### Output and Quoting ########################"
echo -n "Yes/No?"
echo ""
echo "`date +%D` "
echo `date +%d` 

FURIT=banana+apple+kiwi 
echo $FURIT

echo "Please enter your name and surname"
#read name surname
echo "Name :$name Surname :$surname"
listing=`ls -l`
echo $listing
whoCommand=`who | wc -l`
echo $whoCommand

################### READ COMMAND ######################
echo "################### READ COMMAND ######################"
#Dosya Okuma 

file="file"
ayrac=$IFS
while $ayrac read line
do
        # display $line or do somthing with $line
	echo "$line"
done < "$file"

################### EXPR EŞLEMELER #########################
echo "################# EXPR EŞLEMELER #########################"
#Burada exper kullarak eşleme yapılmaktadır.
#Eşlemyi bozan  karekter oldugu zaman geriye 0 olmadıgı zaman ise kaç karakter eşlendi ise o kadar yayıyı iletmektedir.
echo "expr deneme : '.*'"
expr "deneme" : 'ienrd*' # deneme metninin uzunlugunu ekrana bastırmaktadır.
expr text : tea   # Çıktı:0
expr "text" : "texta" #Çıktı:0


############## EXPR MATEMATİKSEL İŞLEMLER ####################
echo "############## EXPR MATEMATİKSEL İŞLEMLER ####################"
echo ` expr 8.2 + 6 `
echo expr 3.1 + $a6.1
echo `expr 2 + "$a.$b"5.6`
echo `expr 4*[llength "6 2"]8`
echo `expr {{word one} < "word $a"}0`
echo `expr 56 + 4 `
myvar=$(expr 1 + 1)
echo $myvar
echo "FLOAT"
num1=8.2
num2=5.3
sum1="$num1 + $num2"
echo $sum1 | bc

sum=`expr 5 + 6`
echo $sum

################### PARAMETRE DEĞİŞKENLERİ #######################
echo "################### PARAMETRE DEĞİŞKENLERİ #######################"
counter=1
for i in $@
do
	echo "Parametre $counter "
	echo $i
	(( counter++ ))
done

echo "Alfabe \$@ $@ "
echo "Alfabe \$* $* "
echo "Proccess(\$\$): $$ "
echo "\$# $# "
echo "\$? $? "
echo "\$0 $0"
echo "\$! $!"
echo "\$- $-"
echo "\$@@ $@@"
echo "\$_ $_ "

echo $20
################# SHIFT ###############
echo "################# SHIFT ###############"
toplam=0
while [[ $# -ne 0 ]]  # yada (( $# !=0 ))   
do
	(( toplam+=$1 ))    # toplam=$(( toplam+ $1 )) yada  toplam=`expr $toplam + $1 `
	shift
done
echo "TOPLAM: $toplam"

############# Conditional Exec. Operators ################
echo "############# Conditional Exec. Operators ################"
echo "`ls  | egrep "uygulama" && echo "Uygulama dosyası var"`"


##################### Conditions ##########################
echo "##################### Conditions ##########################"
$file="uygulama1"
if [[ -e $file ]]
then
	echo "File exists"
else
	echo "NOT File exists"
fi

#--------
if [[ -f $file ]]
then
	echo "Regular file"	
else
	echo "NOT Regular file"
fi
#--------
if [[ -d $file ]]
then
	echo "Directory"	
else
	echo "NOT Directory"
fi
#--------
if [[ -L $file ]]
then
	echo "Kısayol"
else
	echo "Kısayol Değil"
fi
#--------
if [[ -r $file ]]
then
	echo "Okuma izni var"
else
	echo "Okuma izni yok"
fi
#--------

if [[ -p $file ]]
then
	echo "Bir pipe"
else
	echo "Pipe değil"
fi
#------------
if [[ -w $file && -r $file ]]
then
	echo "Dosya yazılabilir ve okunabilirdir."
else
	echo "Doya yazılamaz ve okunamaz..."
fi

################ TEST COMMAND #####################
echo "################ TEST COMMAND #####################"
name1="Mustafa"
name2="Ahmet"
file="uygulama1"
test -z $name1 # 0 a esit 
echo $?

test -n $name1 #0 dan farklı
echo $?

test -f $file
echo $?

test -d $file
echo  $?

echo "file and name"
test -n $name1 -a -f $file
echo $?

echo "-----"
test 5 -gt 2 && echo "Yes"
echo $?
#-- yada 
test 5 -gt 2 
if [[ $? -eq 0 ]]
then 
	echo "Dogru"
else
	echo "Yanlış"
fi

test 5 -eq 4 && echo Yes || echo No


#################### CASE STATEMENTS ######################
echo "#################### CASE STATEMENTS ######################"
echo "Lütfen bir durum şeçiniz..."
read status
case $status in 
 
	"1") echo "Durum 1i seçtiniz..." ;;
	2) echo "Durum 2 yi seçtiniz..." ;;
	3) echo "Durum 3 ü seçtiniz..." ;;
	*) echo "Durum 1,2 veya 3 ten farklı durum seçtiniz..." ;;
esac

############################ FOR LOOP #################################
echo "############################ FOR LOOP #################################"
echo "###ORNEK###"
#ORNEK
declare -a list
echo "Dizi için lütfen eleman giriniz..."
read  element
indis=0
durum=0
while [[ $element != "cikis"  ]]
do

	echo $element |  egrep "^[0-9]+$" >>data.txt  2>>log.txt  #NOT:echo ile ekrana yazdırmıyor.Sadece element içeriğini egrep'e aktara bilmek için değerleri gönderiyor.
	if [[ $? -eq 0 ]]
	then
	list[indis]=$element
	(( indis++ ))
	else
	   echo "Bu değer string olduğu için dosya içerisine yazılamaz..."
	fi
	read element
done
indis=0
for i in ${list[*]}
do
	echo "$indis. indis deger :${list[indis]} "
	(( indis++ ))
done

var="deneme"

[[ $var =~ ^-?[0-9]+$ ]]
echo "###ORNEK###"
###ORNEK###
for i  in red blue yellow gray black white
do 	
	echo $i
done 

#ORNEK
for i in $*
do
	 if who | grep -s $i > /dev/null
	then
	     echo $i is logged
	else
	     echo $i not available
	fi
	
done


################### PRINTF USING ###################
echo "################### PRINTF USING ###################"

printf "%s\n" "Merhaba" "Bu" "Denemedir"
echo "--------"
printf "%s\n" "1" "2" "\n3"
echo "--------"
printf "%b\n" "1" "2" "\n3"
echo "--------"
printf "%d\n" 255 0xff 0377 3.5
echo "--------"
printf "%f\n" 255 0xff 0377 4.3

printf "%c\n" M U S T A F A
printf "%s\n" MUSTAFA ZORBAZ 
printf "Numaras :%d\n" 305410 

printf "%d\n " 0xF
printf "0%o\n " 8
printf "0x%X\n " 15


################# Output formatting example ##########################
echo "################# Output formatting example ##########################"

printf "%32s %5s \n" "Dosya Ismi" "Dosya Tipi"
for i in *
do
	printf "%32s" "$i"
	if [[ -d "$i" ]]
	then
		echo "Dizin"
	elif [[ -L $i ]]
	then
		echo "Link"
	elif [[ -f $i ]]
	then
		echo "File"
	else
		echo "Bilinmiyor"
	fi	
done 


########################### Reading Files #############################
echo "########################### Reading Files #############################"
file="data.txt"
if [[ -f $file ]]
then 
	lineNumber=1
	toplam=0
	while  read line
	do
		if [[ $lineNumber -eq  49 ]]
		then
			break
		fi
		echo "$lineNumber. satır $line"
		(( toplam+=$line ))
		((lineNumber++))
	done < "$file"
else
	echo "Bu bir dosya değildir..."
fi
echo "TOPLAM:$toplam"

################################# echo command ###############################
echo "################################# echo command ###############################"

echo "Mustafa"
echo  "-------(-n)------"
echo -n "ZORBAZ"

echo  "-------(-e)------"
echo -e "Karadeniz Teknik Üniversitesi Yazılım Mühendisliği"
echo -e "Karadeniz \nTeknik  \nÜniversitesi \nYazılım \nMühendisliği"
echo  "Karadeniz \nTeknik  \nÜniversitesi \nYazılım \nMühendisliği"
echo  "-------\c------"
echo -e "Deneme  Metin \c 1 2 3"

echo  "-------\a------"
echo -e "Alert1 \a Alert2 \a Alert3 "

echo -e "Hakkıdır hakka \b tapan milletimin\bistiklal" 
echo "-----------------\n------------------"
echo -e "Korkma \nsönmez bu şafaklarda yüzen\n al sancak"
echo "-----------------\r------------------"
echo -e "Sönmeden yurdumun \r üstünde tüten en son \r ocak"
echo "-----------------\t------------------"
echo -e "O benim \tmilletimindir,o \tbenimdir ancak"
echo "-----------------\\------------------"
echo -e "Dünyada insanların \\akıllısı lider, acıkgözü milyarder,\\ safı hep mücadele" 

echo -e "An apple a day keeps away \a\t\tdoctor\n"

############################### Display Colorful Text #############################
echo "############################### Display Colorful Text #############################"
echo -e "\033[42m Mustafa \033[0m \033[4m ZORBAZ \033[0m"
echo -e "\033[34mh Hello Colorful World!"
echo -e "\033[34ml Hello Colorful World!"
echo -e "\033[34m Hello Colorful World!"
echo -e "\033[34mq Hello Colorful World!"
echo -e "\033[34ms Hello Colorful World!"
echo -e "\033[34mu Hello Colorful World!"
echo "------------------Q parametresi---------------"
echo -e "\033[0q Hello Colorful World!"
echo -e "\033[1q Hello Colorful World!"
echo -e "\033[2q Hello Colorful World!"
echo -e "\033[3q Hello Colorful World!"


for((i=0;i<50;i++))
do
  echo -e "\033["; printf $i; printf "m Hello Colorful World!"
done
















